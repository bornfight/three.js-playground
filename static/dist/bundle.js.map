{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/GLTFModelController.js","static/js/components/NavigationController.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\nimport * as THREE from \"three\";\nimport * as dat from \"dat.gui\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport default class GLTFModelController {\n    constructor() {\n        this.DOM = {\n            modelContainer: \".js-model-container\",\n            states: {},\n        };\n\n        this.modelContainer = document.querySelector(this.DOM.modelContainer);\n\n        this.scene;\n        this.camera;\n        this.renderer;\n        this.controls;\n        this.mixer;\n        this.clock = new THREE.Clock();\n\n        this.gui = new dat.GUI({\n            name: \"Bottle config\",\n        });\n\n        this.guiConf = {\n            color: {\n                color: \"#3cabab\",\n            },\n            autoRotation: {\n                autoRotate: true,\n            },\n            opacity: {\n                transparent: true,\n                opacity: 0.5,\n            },\n            glossy: {\n                glass: false,\n                emissiveColor: \"#000000\",\n            },\n        };\n    }\n\n    init() {\n        console.log(\"GLTFModelController init()\");\n\n        if (this.modelContainer !== null) {\n            this.initFBXModel();\n            this.animate();\n        } else {\n            console.error(\n                `${this.DOM.modelContainer} does not exist in the DOM!`,\n            );\n        }\n    }\n\n    initFBXModel() {\n        // camera\n        this.camera = new THREE.PerspectiveCamera(\n            35,\n            window.innerWidth / window.innerHeight,\n            0.5,\n            1000,\n        );\n        this.camera.position.set(48, 32, 32);\n\n        // scene\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0xa0a0a0);\n        this.scene.fog = new THREE.Fog(0xa0a0a0, 200, 400);\n\n        // lights\n        const hemiLight = new THREE.HemisphereLight(0xffffff, 0x999999);\n        hemiLight.position.set(0, 200, 0);\n        this.scene.add(hemiLight);\n\n        const dirLight = new THREE.DirectionalLight(0xcccccc);\n        dirLight.position.set(20, 20, 20);\n        dirLight.castShadow = true;\n        dirLight.shadow.camera.top = 180;\n        dirLight.shadow.camera.bottom = -100;\n        dirLight.shadow.camera.left = -120;\n        dirLight.shadow.camera.right = 120;\n        dirLight.shadow.mapSize.width = 2048;\n        dirLight.shadow.mapSize.height = 2048;\n        this.scene.add(dirLight);\n\n        // ground\n        const mesh = new THREE.Mesh(\n            new THREE.PlaneBufferGeometry(2000, 2000, 10, 10),\n            new THREE.MeshPhongMaterial({ color: 0x999999, depthWrite: false }),\n        );\n        mesh.rotation.x = -Math.PI / 2;\n        mesh.receiveShadow = true;\n        this.scene.add(mesh);\n\n        // ground grid\n        const grid = new THREE.GridHelper(2000, 40, 0x000000, 0x000000);\n        grid.material.opacity = 0.1;\n        grid.material.transparent = true;\n        this.scene.add(grid);\n\n        // get model\n        let model = this.modelContainer.getAttribute(\"data-model-source\");\n\n        // loader\n        const loader = new GLTFLoader();\n        loader.load(model, (model) => {\n            // dynamically change material\n            let material = new THREE.MeshPhysicalMaterial({\n                color: this.guiConf.color.color,\n            });\n\n            model.scene.traverse((object) => {\n                if (object.isMesh) {\n                    object.castShadow = true;\n                    object.receiveShadow = true;\n                    const initMaterial = object.material;\n\n                    // additional modifications of position, color etc. — model properties can be changed\n                    object.position.y = 0.1;\n                    // object.material = material;\n\n                    object.material.side = 2;\n                    object.material.shadowSide = 1;\n\n                    object.material.opacity = this.guiConf.opacity.opacity;\n                    object.material.emissive.set(this.guiConf.glossy.emissiveColor);\n\n                    this.gui\n                        .addColor(this.guiConf.color, \"color\")\n                        .onChange((colorValue) => {\n                            object.material.color.set(colorValue);\n                        });\n\n                    this.gui\n                        .add(this.guiConf.opacity, \"transparent\")\n                        .onChange((value) => {\n                            if (value === false) {\n                                object.material = material;\n                            } else {\n                                object.material = initMaterial;\n                            }\n\n                            if (this.guiConf.glossy.glass) {\n                                object.material.refractionRatio = 1;\n                                object.material.reflectivity = 1;\n                                object.material.roughness = 0;\n                                object.material.clearcoat = 1;\n                                object.material.clearcoatRoughness = 1;\n                            }\n                        });\n\n                    this.gui\n                        .add(this.guiConf.opacity, \"opacity\", 0.25, 0.75, 0.01)\n                        .onChange((opacityValue) => {\n                            object.material.opacity = opacityValue;\n                        });\n\n                    this.gui\n                        .addColor(this.guiConf.glossy, \"emissiveColor\")\n                        .onChange((colorValue) => {\n                            object.material.emissive.set(colorValue);\n                        });\n\n                    this.gui\n                        .add(this.guiConf.glossy, \"glass\")\n                        .onChange((value) => {\n                            if (value) {\n                                object.material.refractionRatio = 1;\n                                object.material.reflectivity = 1;\n                                object.material.roughness = 0;\n                                object.material.clearcoat = 1;\n                                object.material.clearcoatRoughness = 1;\n                            } else {\n                                object.material.refractionRatio = 0;\n                                object.material.reflectivity = 0;\n                                object.material.roughness = 0.5;\n                                object.material.clearcoat = 0;\n                                object.material.clearcoatRoughness = 0;\n                            }\n                        });\n                }\n            });\n\n            this.scene.add(model.scene);\n        });\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.shadowMap.enabled = true;\n        this.modelContainer.appendChild(this.renderer.domElement);\n\n        // orbit controls\n        this.controls = new OrbitControls(\n            this.camera,\n            this.renderer.domElement,\n        );\n        this.controls.target.set(0, 10, 0);\n        this.controls.autoRotate = true;\n        this.controls.autoRotateSpeed = 1;\n\n        this.gui\n            .add(this.guiConf.autoRotation, \"autoRotate\")\n            .onChange((value) => {\n                console.log(value);\n                if (value === false) {\n                    this.controls.autoRotate = false;\n                } else {\n                    this.controls.autoRotate = true;\n                }\n            });\n\n        // handle resize\n        window.addEventListener(\"resize\", () => this.onWindowResize(), false);\n    }\n\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n    \n    animate() {\n        requestAnimationFrame(() => this.animate());\n        this.renderer.render(this.scene, this.camera);\n        this.controls.update();\n    }\n}\n","/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n\n        this.DOM = {\n            navigation: \".js-navigation-wrapper\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n    /**\n     *\n     */\n    init() {\n        console.log(\"Navigation init()\");\n\n        if (this.navigation !== null) {\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(\n                this.DOM.states.navigationScrolled,\n            );\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","/**\n * Grid helper\n * Show grid overlay when developing\n * Not included in production bundle JS file\n */\nexport default class GridHelper {\n    constructor() {\n        /**\n         * Grid DOM selector\n         * @type {{grid: string}}\n         */\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        /**\n         * Grid options\n         * @type {{gutterFixed: boolean, initialDisplay: string, gridFixed: boolean, gutterWidth: number, gridColor: string, columnCount: number, gridWidth: number, columnBgColor: string}}\n         */\n        this.gridOptions = {\n            initialDisplay: \"none\", // \"flex\" or \"none\"\n            columnCount: 24,\n            gridWidth: 1440, // px\n            gridFixed: true,\n            gutterWidth: 0, // px\n            gutterFixed: false,\n            gridColor: \"rgb(255, 0, 255, 0.15)\",\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth -\n                (this.gridOptions.columnCount - 1) *\n                    this.gridOptions.gutterWidth) /\n            this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${\n            (this.columnWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n\n        this.gutterWidthPercentage = `${\n            (this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (this.gridOptions.gridFixed === true) {\n            this.grid.style.maxWidth = `${this.gridOptions.gridWidth}px`;\n        }\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","/**\n * MAIN JS FILE\n */\n\n/**\n * Helpers\n * Imports of helper functions are stripped out of bundle\n * Include them within \"start-strip-code\" and \"end-strip-code\" comments\n */\n/* start-strip-code */\nimport GridHelper from \"./helpers/GridHelper\";\n/* end-strip-code */\n/**\n * Components\n */\nimport NavigationController from \"./components/NavigationController\";\nimport GLTFModelController from \"./components/GLTFModelController\";\n\n/**\n * Check if document is ready cross-browser\n * @param callback\n */\nconst ready = (callback) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callback();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callback();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    /**\n     * HELPERS INIT\n     * Only init helpers if they exist\n     * Will be undefined on production because of import stripping\n     */\n    if (typeof GridHelper == \"function\") {\n        const grid = new GridHelper();\n        grid.init();\n    }\n\n    /**\n     * CREDITS INIT\n     */\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n    console.info(\"dev by: %c Bornfight \", credits);\n\n    /**\n     * COMPONENTS INIT\n     */\n\n    /**\n     * Navigation\n     * @type {NavigationController}\n     */\n    const navigation = new NavigationController();\n    navigation.init();\n\n    const gltfModelController = new GLTFModelController();\n    gltfModelController.init();\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzdGF0aWMvanMvY29tcG9uZW50cy9HTFRGTW9kZWxDb250cm9sbGVyLmpzIiwic3RhdGljL2pzL2NvbXBvbmVudHMvTmF2aWdhdGlvbkNvbnRyb2xsZXIuanMiLCJzdGF0aWMvanMvaGVscGVycy9HcmlkSGVscGVyLmpzIiwic3RhdGljL2pzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FDQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7Ozs7Ozs7Ozs7OztJQUVxQixtQjtBQUNqQixpQ0FBYztBQUFBOztBQUNWLFNBQUssR0FBTCxHQUFXO0FBQ1AsTUFBQSxjQUFjLEVBQUUscUJBRFQ7QUFFUCxNQUFBLE1BQU0sRUFBRTtBQUZELEtBQVg7QUFLQSxTQUFLLGNBQUwsR0FBc0IsUUFBUSxDQUFDLGFBQVQsQ0FBdUIsS0FBSyxHQUFMLENBQVMsY0FBaEMsQ0FBdEI7QUFFQSxTQUFLLEtBQUw7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLFFBQUw7QUFDQSxTQUFLLFFBQUw7QUFDQSxTQUFLLEtBQUw7QUFDQSxTQUFLLEtBQUwsR0FBYSxJQUFJLEtBQUssQ0FBQyxLQUFWLEVBQWI7QUFFQSxTQUFLLEdBQUwsR0FBVyxJQUFJLEdBQUcsQ0FBQyxHQUFSLENBQVk7QUFDbkIsTUFBQSxJQUFJLEVBQUU7QUFEYSxLQUFaLENBQVg7QUFJQSxTQUFLLE9BQUwsR0FBZTtBQUNYLE1BQUEsS0FBSyxFQUFFO0FBQ0gsUUFBQSxLQUFLLEVBQUU7QUFESixPQURJO0FBSVgsTUFBQSxZQUFZLEVBQUU7QUFDVixRQUFBLFVBQVUsRUFBRTtBQURGLE9BSkg7QUFPWCxNQUFBLE9BQU8sRUFBRTtBQUNMLFFBQUEsV0FBVyxFQUFFLElBRFI7QUFFTCxRQUFBLE9BQU8sRUFBRTtBQUZKLE9BUEU7QUFXWCxNQUFBLE1BQU0sRUFBRTtBQUNKLFFBQUEsS0FBSyxFQUFFLEtBREg7QUFF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QUNqQyxRQUFNLElBQUksR0FBRyxJQUFJLG1CQUFKLEVBQWI7QUFDQSxJQUFBLElBQUksQ0FBQyxJQUFMO0FBQ0g7QUFFRDtBQUNKO0FBQ0E7OztBQUNJLE1BQU0sT0FBTyxHQUFHLENBQ1osMkJBRFksRUFFWixjQUZZLEVBR1osZ0JBSFksRUFJWixtQkFKWSxFQUtaLG9CQUxZLEVBTVosMkJBTlksRUFPWixtQkFQWSxFQVFkLElBUmMsQ0FRVCxHQVJTLENBQWhCO0FBU0EsRUFBQSxPQUFPLENBQUMsSUFBUixDQUFhLHVCQUFiLEVBQXNDLE9BQXRDO0FBRUE7QUFDSjtBQUNBOztBQUVJO0FBQ0o7QUFDQTtBQUNBOztBQUNJLE1BQU0sVUFBVSxHQUFHLElBQUksNkJBQUosRUFBbkI7QUFDQSxFQUFBLFVBQVUsQ0FBQyxJQUFYO0FBRUEsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLDRCQUFKLEVBQTVCO0FBQ0EsRUFBQSxtQkFBbUIsQ0FBQyxJQUFwQjtBQUNILENBdENJLENBQUwiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuaW1wb3J0ICogYXMgZGF0IGZyb20gXCJkYXQuZ3VpXCI7XG5cbmltcG9ydCB7IE9yYml0Q29udHJvbHMgfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL2NvbnRyb2xzL09yYml0Q29udHJvbHNcIjtcbmltcG9ydCB7IEdMVEZMb2FkZXIgfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvR0xURkxvYWRlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHTFRGTW9kZWxDb250cm9sbGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ET00gPSB7XG4gICAgICAgICAgICBtb2RlbENvbnRhaW5lcjogXCIuanMtbW9kZWwtY29udGFpbmVyXCIsXG4gICAgICAgICAgICBzdGF0ZXM6IHt9LFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMubW9kZWxDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuRE9NLm1vZGVsQ29udGFpbmVyKTtcblxuICAgICAgICB0aGlzLnNjZW5lO1xuICAgICAgICB0aGlzLmNhbWVyYTtcbiAgICAgICAgdGhpcy5yZW5kZXJlcjtcbiAgICAgICAgdGhpcy5jb250cm9scztcbiAgICAgICAgdGhpcy5taXhlcjtcbiAgICAgICAgdGhpcy5jbG9jayA9IG5ldyBUSFJFRS5DbG9jaygpO1xuXG4gICAgICAgIHRoaXMuZ3VpID0gbmV3IGRhdC5HVUkoe1xuICAgICAgICAgICAgbmFtZTogXCJCb3R0bGUgY29uZmlnXCIsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuZ3VpQ29uZiA9IHtcbiAgICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IFwiIzNjYWJhYlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGF1dG9Sb3RhdGlvbjoge1xuICAgICAgICAgICAgICAgIGF1dG9Sb3RhdGU6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb3BhY2l0eToge1xuICAgICAgICAgICAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuNSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnbG9zc3k6IHtcbiAgICAgICAgICAgICAgICBnbGFzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW1pc3NpdmVDb2xvcjogXCIjMDAwMDAwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiR0xURk1vZGVsQ29udHJvbGxlciBpbml0KClcIik7XG5cbiAgICAgICAgaWYgKHRoaXMubW9kZWxDb250YWluZXIgIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuaW5pdEZCWE1vZGVsKCk7XG4gICAgICAgICAgICB0aGlzLmFuaW1hdGUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICAgICAgICAgYCR7dGhpcy5ET00ubW9kZWxDb250YWluZXJ9IGRvZXMgbm90IGV4aXN0IGluIHRoZSBET00hYCxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbml0RkJYTW9kZWwoKSB7XG4gICAgICAgIC8vIGNhbWVyYVxuICAgICAgICB0aGlzLmNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYShcbiAgICAgICAgICAgIDM1LFxuICAgICAgICAgICAgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgICAgICAwLjUsXG4gICAgICAgICAgICAxMDAwLFxuICAgICAgICApO1xuICAgICAgICB0aGlzLmNhbWVyYS5wb3NpdGlvbi5zZXQoNDgsIDMyLCAzMik7XG5cbiAgICAgICAgLy8gc2NlbmVcbiAgICAgICAgdGhpcy5zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xuICAgICAgICB0aGlzLnNjZW5lLmJhY2tncm91bmQgPSBuZXcgVEhSRUUuQ29sb3IoMHhhMGEwYTApO1xuICAgICAgICB0aGlzLnNjZW5lLmZvZyA9IG5ldyBUSFJFRS5Gb2coMHhhMGEwYTAsIDIwMCwgNDAwKTtcblxuICAgICAgICAvLyBsaWdodHNcbiAgICAgICAgY29uc3QgaGVtaUxpZ2h0ID0gbmV3IFRIUkVFLkhlbWlzcGhlcmVMaWdodCgweGZmZmZmZiwgMHg5OTk5OTkpO1xuICAgICAgICBoZW1pTGlnaHQucG9zaXRpb24uc2V0KDAsIDIwMCwgMCk7XG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKGhlbWlMaWdodCk7XG5cbiAgICAgICAgY29uc3QgZGlyTGlnaHQgPSBuZXcgVEhSRUUuRGlyZWN0aW9uYWxMaWdodCgweGNjY2NjYyk7XG4gICAgICAgIGRpckxpZ2h0LnBvc2l0aW9uLnNldCgyMCwgMjAsIDIwKTtcbiAgICAgICAgZGlyTGlnaHQuY2FzdFNoYWRvdyA9IHRydWU7XG4gICAgICAgIGRpckxpZ2h0LnNoYWRvdy5jYW1lcmEudG9wID0gMTgwO1xuICAgICAgICBkaXJMaWdodC5zaGFkb3cuY2FtZXJhLmJvdHRvbSA9IC0xMDA7XG4gICAgICAgIGRpckxpZ2h0LnNoYWRvdy5jYW1lcmEubGVmdCA9IC0xMjA7XG4gICAgICAgIGRpckxpZ2h0LnNoYWRvdy5jYW1lcmEucmlnaHQgPSAxMjA7XG4gICAgICAgIGRpckxpZ2h0LnNoYWRvdy5tYXBTaXplLndpZHRoID0gMjA0ODtcbiAgICAgICAgZGlyTGlnaHQuc2hhZG93Lm1hcFNpemUuaGVpZ2h0ID0gMjA0ODtcbiAgICAgICAgdGhpcy5zY2VuZS5hZGQoZGlyTGlnaHQpO1xuXG4gICAgICAgIC8vIGdyb3VuZFxuICAgICAgICBjb25zdCBtZXNoID0gbmV3IFRIUkVFLk1lc2goXG4gICAgICAgICAgICBuZXcgVEhSRUUuUGxhbmVCdWZmZXJHZW9tZXRyeSgyMDAwLCAyMDAwLCAxMCwgMTApLFxuICAgICAgICAgICAgbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKHsgY29sb3I6IDB4OTk5OTk5LCBkZXB0aFdyaXRlOiBmYWxzZSB9KSxcbiAgICAgICAgKTtcbiAgICAgICAgbWVzaC5yb3RhdGlvbi54ID0gLU1hdGguUEkgLyAyO1xuICAgICAgICBtZXNoLnJlY2VpdmVTaGFkb3cgPSB0cnVlO1xuICAgICAgICB0aGlzLnNjZW5lLmFkZChtZXNoKTtcblxuICAgICAgICAvLyBncm91bmQgZ3JpZFxuICAgICAgICBjb25zdCBncmlkID0gbmV3IFRIUkVFLkdyaWRIZWxwZXIoMjAwMCwgNDAsIDB4MDAwMDAwLCAweDAwMDAwMCk7XG4gICAgICAgIGdyaWQubWF0ZXJpYWwub3BhY2l0eSA9IDAuMTtcbiAgICAgICAgZ3JpZC5tYXRlcmlhbC50cmFuc3BhcmVudCA9IHRydWU7XG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKGdyaWQpO1xuXG4gICAgICAgIC8vIGdldCBtb2RlbFxuICAgICAgICBsZXQgbW9kZWwgPSB0aGlzLm1vZGVsQ29udGFpbmVyLmdldEF0dHJpYnV0ZShcImRhdGEtbW9kZWwtc291cmNlXCIpO1xuXG4gICAgICAgIC8vIGxvYWRlclxuICAgICAgICBjb25zdCBsb2FkZXIgPSBuZXcgR0xURkxvYWRlcigpO1xuICAgICAgICBsb2FkZXIubG9hZChtb2RlbCwgKG1vZGVsKSA9PiB7XG4gICAgICAgICAgICAvLyBkeW5hbWljYWxseSBjaGFuZ2UgbWF0ZXJpYWxcbiAgICAgICAgICAgIGxldCBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoUGh5c2ljYWxNYXRlcmlhbCh7XG4gICAgICAgICAgICAgICAgY29sb3I6IHRoaXMuZ3VpQ29uZi5jb2xvci5jb2xvcixcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBtb2RlbC5zY2VuZS50cmF2ZXJzZSgob2JqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG9iamVjdC5pc01lc2gpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LmNhc3RTaGFkb3cgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBvYmplY3QucmVjZWl2ZVNoYWRvdyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluaXRNYXRlcmlhbCA9IG9iamVjdC5tYXRlcmlhbDtcblxuICAgICAgICAgICAgICAgICAgICAvLyBhZGRpdGlvbmFsIG1vZGlmaWNhdGlvbnMgb2YgcG9zaXRpb24sIGNvbG9yIGV0Yy4g4oCUIG1vZGVsIHByb3BlcnRpZXMgY2FuIGJlIGNoYW5nZWRcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LnBvc2l0aW9uLnkgPSAwLjE7XG4gICAgICAgICAgICAgICAgICAgIC8vIG9iamVjdC5tYXRlcmlhbCA9IG1hdGVyaWFsO1xuXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbC5zaWRlID0gMjtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLnNoYWRvd1NpZGUgPSAxO1xuXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbC5vcGFjaXR5ID0gdGhpcy5ndWlDb25mLm9wYWNpdHkub3BhY2l0eTtcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLmVtaXNzaXZlLnNldCh0aGlzLmd1aUNvbmYuZ2xvc3N5LmVtaXNzaXZlQ29sb3IpO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ3VpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ29sb3IodGhpcy5ndWlDb25mLmNvbG9yLCBcImNvbG9yXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAub25DaGFuZ2UoKGNvbG9yVmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwuY29sb3Iuc2V0KGNvbG9yVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ndWlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGQodGhpcy5ndWlDb25mLm9wYWNpdHksIFwidHJhbnNwYXJlbnRcIilcbiAgICAgICAgICAgICAgICAgICAgICAgIC5vbkNoYW5nZSgodmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbCA9IG1hdGVyaWFsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbCA9IGluaXRNYXRlcmlhbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5ndWlDb25mLmdsb3NzeS5nbGFzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwucmVmcmFjdGlvblJhdGlvID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLnJlZmxlY3Rpdml0eSA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbC5yb3VnaG5lc3MgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwuY2xlYXJjb2F0ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLmNsZWFyY29hdFJvdWdobmVzcyA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ndWlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGQodGhpcy5ndWlDb25mLm9wYWNpdHksIFwib3BhY2l0eVwiLCAwLjI1LCAwLjc1LCAwLjAxKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2hhbmdlKChvcGFjaXR5VmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwub3BhY2l0eSA9IG9wYWNpdHlWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ3VpXG4gICAgICAgICAgICAgICAgICAgICAgICAuYWRkQ29sb3IodGhpcy5ndWlDb25mLmdsb3NzeSwgXCJlbWlzc2l2ZUNvbG9yXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAub25DaGFuZ2UoKGNvbG9yVmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwuZW1pc3NpdmUuc2V0KGNvbG9yVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ndWlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5hZGQodGhpcy5ndWlDb25mLmdsb3NzeSwgXCJnbGFzc1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgLm9uQ2hhbmdlKCh2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwucmVmcmFjdGlvblJhdGlvID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLnJlZmxlY3Rpdml0eSA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbC5yb3VnaG5lc3MgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwuY2xlYXJjb2F0ID0gMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLmNsZWFyY29hdFJvdWdobmVzcyA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLnJlZnJhY3Rpb25SYXRpbyA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iamVjdC5tYXRlcmlhbC5yZWZsZWN0aXZpdHkgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwucm91Z2huZXNzID0gMC41O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvYmplY3QubWF0ZXJpYWwuY2xlYXJjb2F0ID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb2JqZWN0Lm1hdGVyaWFsLmNsZWFyY29hdFJvdWdobmVzcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHRoaXMuc2NlbmUuYWRkKG1vZGVsLnNjZW5lKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gcmVuZGVyZXJcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHsgYW50aWFsaWFzOiB0cnVlIH0pO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2hhZG93TWFwLmVuYWJsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLm1vZGVsQ29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMucmVuZGVyZXIuZG9tRWxlbWVudCk7XG5cbiAgICAgICAgLy8gb3JiaXQgY29udHJvbHNcbiAgICAgICAgdGhpcy5jb250cm9scyA9IG5ldyBPcmJpdENvbnRyb2xzKFxuICAgICAgICAgICAgdGhpcy5jYW1lcmEsXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmRvbUVsZW1lbnQsXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuY29udHJvbHMudGFyZ2V0LnNldCgwLCAxMCwgMCk7XG4gICAgICAgIHRoaXMuY29udHJvbHMuYXV0b1JvdGF0ZSA9IHRydWU7XG4gICAgICAgIHRoaXMuY29udHJvbHMuYXV0b1JvdGF0ZVNwZWVkID0gMTtcblxuICAgICAgICB0aGlzLmd1aVxuICAgICAgICAgICAgLmFkZCh0aGlzLmd1aUNvbmYuYXV0b1JvdGF0aW9uLCBcImF1dG9Sb3RhdGVcIilcbiAgICAgICAgICAgIC5vbkNoYW5nZSgodmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xzLmF1dG9Sb3RhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbnRyb2xzLmF1dG9Sb3RhdGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIC8vIGhhbmRsZSByZXNpemVcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgKCkgPT4gdGhpcy5vbldpbmRvd1Jlc2l6ZSgpLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgb25XaW5kb3dSZXNpemUoKSB7XG4gICAgICAgIHRoaXMuY2FtZXJhLmFzcGVjdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0O1xuICAgICAgICB0aGlzLmNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG5cbiAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIH1cbiAgICBcbiAgICBhbmltYXRlKCkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5hbmltYXRlKCkpO1xuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSk7XG4gICAgICAgIHRoaXMuY29udHJvbHMudXBkYXRlKCk7XG4gICAgfVxufVxuIiwiLyoqXG4gKiBcInNtYXJ0XCIgbmF2aWdhdGlvbiB3aGljaCBnb2VzIG9mZiBzY3JlZW4gd2hlbiBzY3JvbGxpbmcgZG93biBmb3IgYSBiZXR0ZXIgb3ZlcnZpZXcgb2YgY29udGVudCBhbmQgVVhcbiAqIG5hdmlnYXRpb24gYXBwZWFycyB3aGVuIHNjcm9sbGluZyB1cFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXZpZ2F0aW9uQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOYXZpZ2F0aW9uIERPTSBzZWxlY3RvcnNcbiAgICAgICAgICogTmF2aWdhdGlvbiBET00gc3RhdGUgQ1NTIGNsYXNzZXNcbiAgICAgICAgICogQHR5cGUge3tuYXZpZ2F0aW9uOiBzdHJpbmcsIHN0YXRlczoge25hdmlnYXRpb25TbGlkZVVwOiBzdHJpbmcsIG5hdmlnYXRpb25TY3JvbGxlZDogc3RyaW5nLCBuYXZpZ2F0aW9uRml4ZWQ6IHN0cmluZ319fVxuICAgICAgICAgKi9cblxuICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgIG5hdmlnYXRpb246IFwiLmpzLW5hdmlnYXRpb24td3JhcHBlclwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICAgICAgbmF2aWdhdGlvblNjcm9sbGVkOiBcImhhcy1zY3JvbGxlZFwiLFxuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25GaXhlZDogXCJpcy1maXhlZFwiLFxuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25TbGlkZVVwOiBcInNsaWRlLXVwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBmbGFnLCBzdGF0ZSB2YXJpYWJsZSBmb3Igc2Nyb2xsaW5nIGV2ZW50XG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zY3JvbGxpbmcgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGFtb3VudCBvZiBwaXhlbHMgdG8gc2Nyb2xsIGZyb20gdG9wIGZvciBhZGRpbmcgXCJoYXMtc2Nyb2xsZWRcIiBzdGF0ZSBjbGFzc1xuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zY3JvbGxOYXZpZ2F0aW9uT2Zmc2V0ID0gMjAwO1xuICAgICAgICAvKipcbiAgICAgICAgICogdmFyaWFibGUgZm9yIHN0b3JpbmcgYW1vdW50IG9mIHNjcm9sbCBmcm9tIHRvcCBwb3NpdGlvbiB2YWx1ZVxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wcmV2aW91c1RvcCA9IDA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiB2YXJpYWJsZSBmb3Igc3RvcmluZyBjdXJyZW50IHNjcm9sbCBwb3NpdGlvbiB2YWx1ZVxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jdXJyZW50VG9wID0gMDtcbiAgICAgICAgdGhpcy5zY3JvbGxEZWx0YSA9IDA7XG4gICAgICAgIHRoaXMuc2Nyb2xsT2Zmc2V0ID0gMDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogZmV0Y2ggbmF2aWdhdGlvbiBlbGVtZW50IERPTSBlbGVtZW50XG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS5uYXZpZ2F0aW9uKTtcbiAgICB9XG5cbiAgICAvL3JlZ2lvbiBtZXRob2RzXG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBpbml0KCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk5hdmlnYXRpb24gaW5pdCgpXCIpO1xuXG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbkNvbnRyb2xsZXIoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYCR7dGhpcy5ET00ubmF2aWdhdGlvbn0gZG9lcyBub3QgZXhpc3QgaW4gdGhlIERPTSFgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgbmF2aWdhdGlvbkNvbnRyb2xsZXIoKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnNjcm9sbGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsaW5nID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgIGlmICghd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuY2hlY2tTY3JvbGwoKSwgMjUwKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5jaGVja1Njcm9sbCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgY2hlY2tTY3JvbGwoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgbGV0IGN1cnJlbnRUb3AgPSB3aW5kb3cucGFnZVlPZmZzZXQgfCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDtcblxuICAgICAgICB0aGlzLmNoYW5nZU5hdmlnYXRpb25TdGF0ZShjdXJyZW50VG9wKTtcblxuICAgICAgICB0aGlzLnByZXZpb3VzVG9wID0gY3VycmVudFRvcDtcbiAgICAgICAgdGhpcy5zY3JvbGxpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjdXJyZW50VG9wXG4gICAgICovXG4gICAgY2hhbmdlTmF2aWdhdGlvblN0YXRlKGN1cnJlbnRUb3ApIHtcbiAgICAgICAgaWYgKGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QuYWRkKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2Nyb2xsZWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uLmNsYXNzTGlzdC5yZW1vdmUoXG4gICAgICAgICAgICAgICAgdGhpcy5ET00uc3RhdGVzLm5hdmlnYXRpb25TY3JvbGxlZCxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5wcmV2aW91c1RvcCA+PSBjdXJyZW50VG9wKSB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbGluZ1VwKGN1cnJlbnRUb3ApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxpbmdEb3duKGN1cnJlbnRUb3ApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY3VycmVudFRvcFxuICAgICAqL1xuICAgIHNjcm9sbGluZ1VwKGN1cnJlbnRUb3ApIHtcbiAgICAgICAgaWYgKGN1cnJlbnRUb3AgPCB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2xpZGVVcCk7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2aW91c1RvcCAtIGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbERlbHRhKSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkRPTS5zdGF0ZXMubmF2aWdhdGlvblNsaWRlVXApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY3VycmVudFRvcFxuICAgICAqL1xuICAgIHNjcm9sbGluZ0Rvd24oY3VycmVudFRvcCkge1xuICAgICAgICBpZiAoY3VycmVudFRvcCA+IHRoaXMuc2Nyb2xsTmF2aWdhdGlvbk9mZnNldCArIHRoaXMuc2Nyb2xsT2Zmc2V0KSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb24uY2xhc3NMaXN0LmFkZCh0aGlzLkRPTS5zdGF0ZXMubmF2aWdhdGlvblNsaWRlVXApO1xuICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2xpZGVVcCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL2VuZHJlZ2lvblxufVxuIiwiLyoqXG4gKiBHcmlkIGhlbHBlclxuICogU2hvdyBncmlkIG92ZXJsYXkgd2hlbiBkZXZlbG9waW5nXG4gKiBOb3QgaW5jbHVkZWQgaW4gcHJvZHVjdGlvbiBidW5kbGUgSlMgZmlsZVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHcmlkSGVscGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdyaWQgRE9NIHNlbGVjdG9yXG4gICAgICAgICAqIEB0eXBlIHt7Z3JpZDogc3RyaW5nfX1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuRE9NID0ge1xuICAgICAgICAgICAgZ3JpZDogXCJncmlkXCIsXG4gICAgICAgIH07XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEdyaWQgb3B0aW9uc1xuICAgICAgICAgKiBAdHlwZSB7e2d1dHRlckZpeGVkOiBib29sZWFuLCBpbml0aWFsRGlzcGxheTogc3RyaW5nLCBncmlkRml4ZWQ6IGJvb2xlYW4sIGd1dHRlcldpZHRoOiBudW1iZXIsIGdyaWRDb2xvcjogc3RyaW5nLCBjb2x1bW5Db3VudDogbnVtYmVyLCBncmlkV2lkdGg6IG51bWJlciwgY29sdW1uQmdDb2xvcjogc3RyaW5nfX1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuZ3JpZE9wdGlvbnMgPSB7XG4gICAgICAgICAgICBpbml0aWFsRGlzcGxheTogXCJub25lXCIsIC8vIFwiZmxleFwiIG9yIFwibm9uZVwiXG4gICAgICAgICAgICBjb2x1bW5Db3VudDogMjQsXG4gICAgICAgICAgICBncmlkV2lkdGg6IDE0NDAsIC8vIHB4XG4gICAgICAgICAgICBncmlkRml4ZWQ6IHRydWUsXG4gICAgICAgICAgICBndXR0ZXJXaWR0aDogMCwgLy8gcHhcbiAgICAgICAgICAgIGd1dHRlckZpeGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGdyaWRDb2xvcjogXCJyZ2IoMjU1LCAwLCAyNTUsIDAuMTUpXCIsXG4gICAgICAgICAgICBjb2x1bW5CZ0NvbG9yOiBcInJnYigyNTUsIDAsIDI1NSwgMC4wMjUpXCIsXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29uc29sZUxvZ1N0eWxlID0gW1xuICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLWNvbG9yOiAjYTZhNmE2XCIsXG4gICAgICAgICAgICBcImNvbG9yOiBibGFja1wiLFxuICAgICAgICAgICAgXCJkaXNwbGF5OiBibG9ja1wiLFxuICAgICAgICAgICAgXCJsaW5lLWhlaWdodDogMjRweFwiLFxuICAgICAgICAgICAgXCJ0ZXh0LWFsaWduOiBjZW50ZXJcIixcbiAgICAgICAgICAgIFwiYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZlwiLFxuICAgICAgICAgICAgXCJmb250LXdlaWdodDogYm9sZFwiLFxuICAgICAgICBdLmpvaW4oXCI7XCIpO1xuXG4gICAgICAgIGNvbnNvbGUuaW5mbyhcInRvZ2dsZSBncmlkOiAlYyBBbHQvT3B0aW9uICsgRyBcIiwgY29uc29sZUxvZ1N0eWxlKTtcblxuICAgICAgICB0aGlzLmdyaWQgPSBudWxsO1xuXG4gICAgICAgIHRoaXMuY29sdW1uV2lkdGggPVxuICAgICAgICAgICAgKHRoaXMuZ3JpZE9wdGlvbnMuZ3JpZFdpZHRoIC1cbiAgICAgICAgICAgICAgICAodGhpcy5ncmlkT3B0aW9ucy5jb2x1bW5Db3VudCAtIDEpICpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCkgL1xuICAgICAgICAgICAgdGhpcy5ncmlkT3B0aW9ucy5jb2x1bW5Db3VudDtcblxuICAgICAgICB0aGlzLmNvbHVtbldpZHRoUGVyY2VudGFnZSA9IGAke1xuICAgICAgICAgICAgKHRoaXMuY29sdW1uV2lkdGggLyB0aGlzLmdyaWRPcHRpb25zLmdyaWRXaWR0aCkgKiAxMDBcbiAgICAgICAgfSVgO1xuXG4gICAgICAgIHRoaXMuZ3V0dGVyV2lkdGhQZXJjZW50YWdlID0gYCR7XG4gICAgICAgICAgICAodGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCAvIHRoaXMuZ3JpZE9wdGlvbnMuZ3JpZFdpZHRoKSAqIDEwMFxuICAgICAgICB9JWA7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJHcmlkSGVscGVyIGluaXQoKVwiKTtcbiAgICAgICAgdGhpcy5pbml0R3JpZCgpO1xuICAgICAgICB0aGlzLmtleWJvYXJkU2hvcnRjdXQoKTtcbiAgICB9XG5cbiAgICBpbml0R3JpZCgpIHtcbiAgICAgICAgLy8gY3JlYXRlIGdyaWQgb3ZlcmxheSBlbGVtZW50XG4gICAgICAgIHRoaXMuZ3JpZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRoaXMuZ3JpZC5pZCA9IHRoaXMuRE9NLmdyaWQ7XG5cbiAgICAgICAgLy8gc3R5bGUgZ3JpZCBlbGVtZW50XG4gICAgICAgIHRoaXMuZ3JpZC5zdHlsZS5jc3NUZXh0ID0gYFxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBkaXNwbGF5OiAke3RoaXMuZ3JpZE9wdGlvbnMuaW5pdGlhbERpc3BsYXl9O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgei1pbmRleDogOTk5O1xuICAgICAgICBgO1xuXG4gICAgICAgIGlmICh0aGlzLmdyaWRPcHRpb25zLmdyaWRGaXhlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgdGhpcy5ncmlkLnN0eWxlLm1heFdpZHRoID0gYCR7dGhpcy5ncmlkT3B0aW9ucy5ncmlkV2lkdGh9cHhgO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLmdyaWRPcHRpb25zLmd1dHRlcldpZHRoID4gMCkge1xuICAgICAgICAgICAgdGhpcy5ncmlkLnN0eWxlLmJvcmRlckxlZnQgPSBcIm5vbmVcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFkZCBncmlkIGNvbnRhaW5lciB0byBwYWdlXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5ncmlkKTtcblxuICAgICAgICAvLyBhZGQgY29sdW1ucyB0byBncmlkXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ncmlkT3B0aW9ucy5jb2x1bW5Db3VudDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgY29sdW1uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlcIik7XG4gICAgICAgICAgICB0aGlzLmdyaWQuYXBwZW5kQ2hpbGQoY29sdW1uKTtcblxuICAgICAgICAgICAgY29sdW1uLnN0eWxlLmNzc1RleHQgPSBgXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgICAgIGZsZXgtZ3JvdzogMTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3RoaXMuZ3JpZE9wdGlvbnMuY29sdW1uQmdDb2xvcn07XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAke3RoaXMuZ3JpZE9wdGlvbnMuZ3JpZENvbG9yfTtcbiAgICAgICAgICAgIGA7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmdyaWRPcHRpb25zLmd1dHRlcldpZHRoID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbHVtbi5zdHlsZS5ib3JkZXJSaWdodCA9IGAxcHggc29saWQgJHt0aGlzLmdyaWRPcHRpb25zLmdyaWRDb2xvcn1gO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdyaWQuc3R5bGUuYm9yZGVyUmlnaHQgPSBgMXB4IHNvbGlkICR7dGhpcy5ncmlkT3B0aW9ucy5ncmlkQ29sb3J9YDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuZ3JpZE9wdGlvbnMuZ3V0dGVyRml4ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4uc3R5bGUubWFyZ2luUmlnaHQgPSBgJHt0aGlzLmdyaWRPcHRpb25zLmd1dHRlcldpZHRofXB4YDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29sdW1uLnN0eWxlLm1hcmdpblJpZ2h0ID0gdGhpcy5ndXR0ZXJXaWR0aFBlcmNlbnRhZ2U7XG4gICAgICAgICAgICAgICAgY29sdW1uLnN0eWxlLndpZHRoID0gdGhpcy5jb2x1bW5XaWR0aFBlcmNlbnRhZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmdyaWQubGFzdENoaWxkLnN0eWxlLm1hcmdpblJpZ2h0ID0gMDtcbiAgICB9XG5cbiAgICBrZXlib2FyZFNob3J0Y3V0KCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgKGV2KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXYua2V5Q29kZSA9PT0gNzEgJiYgZXYuYWx0S2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ3JpZC5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdyaWQuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ3JpZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCIvKipcbiAqIE1BSU4gSlMgRklMRVxuICovXG5cbi8qKlxuICogSGVscGVyc1xuICogSW1wb3J0cyBvZiBoZWxwZXIgZnVuY3Rpb25zIGFyZSBzdHJpcHBlZCBvdXQgb2YgYnVuZGxlXG4gKiBJbmNsdWRlIHRoZW0gd2l0aGluIFwic3RhcnQtc3RyaXAtY29kZVwiIGFuZCBcImVuZC1zdHJpcC1jb2RlXCIgY29tbWVudHNcbiAqL1xuLyogc3RhcnQtc3RyaXAtY29kZSAqL1xuaW1wb3J0IEdyaWRIZWxwZXIgZnJvbSBcIi4vaGVscGVycy9HcmlkSGVscGVyXCI7XG4vKiBlbmQtc3RyaXAtY29kZSAqL1xuLyoqXG4gKiBDb21wb25lbnRzXG4gKi9cbmltcG9ydCBOYXZpZ2F0aW9uQ29udHJvbGxlciBmcm9tIFwiLi9jb21wb25lbnRzL05hdmlnYXRpb25Db250cm9sbGVyXCI7XG5pbXBvcnQgR0xURk1vZGVsQ29udHJvbGxlciBmcm9tIFwiLi9jb21wb25lbnRzL0dMVEZNb2RlbENvbnRyb2xsZXJcIjtcblxuLyoqXG4gKiBDaGVjayBpZiBkb2N1bWVudCBpcyByZWFkeSBjcm9zcy1icm93c2VyXG4gKiBAcGFyYW0gY2FsbGJhY2tcbiAqL1xuY29uc3QgcmVhZHkgPSAoY2FsbGJhY2spID0+IHtcbiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIERvY3VtZW50IGlzIGFscmVhZHkgcmVhZHksIGNhbGwgdGhlIGNhbGxiYWNrIGRpcmVjdGx5XG4gICAgICAgICAqL1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgIH0gZWxzZSBpZiAoZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAvKipcbiAgICAgICAgICogQWxsIG1vZGVybiBicm93c2VycyB0byByZWdpc3RlciBET01Db250ZW50TG9hZGVkXG4gICAgICAgICAqL1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9sZCBJRSBicm93c2Vyc1xuICAgICAgICAgKi9cbiAgICAgICAgZG9jdW1lbnQuYXR0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbi8qKlxuICogRG9jdW1lbnQgcmVhZHkgY2FsbGJhY2tcbiAqL1xucmVhZHkoKCkgPT4ge1xuICAgIC8qKlxuICAgICAqIEhFTFBFUlMgSU5JVFxuICAgICAqIE9ubHkgaW5pdCBoZWxwZXJzIGlmIHRoZXkgZXhpc3RcbiAgICAgKiBXaWxsIGJlIHVuZGVmaW5lZCBvbiBwcm9kdWN0aW9uIGJlY2F1c2Ugb2YgaW1wb3J0IHN0cmlwcGluZ1xuICAgICAqL1xuICAgIGlmICh0eXBlb2YgR3JpZEhlbHBlciA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY29uc3QgZ3JpZCA9IG5ldyBHcmlkSGVscGVyKCk7XG4gICAgICAgIGdyaWQuaW5pdCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENSRURJVFMgSU5JVFxuICAgICAqL1xuICAgIGNvbnN0IGNyZWRpdHMgPSBbXG4gICAgICAgIFwiYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMFwiLFxuICAgICAgICBcImNvbG9yOiB3aGl0ZVwiLFxuICAgICAgICBcImRpc3BsYXk6IGJsb2NrXCIsXG4gICAgICAgIFwibGluZS1oZWlnaHQ6IDI0cHhcIixcbiAgICAgICAgXCJ0ZXh0LWFsaWduOiBjZW50ZXJcIixcbiAgICAgICAgXCJib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmXCIsXG4gICAgICAgIFwiZm9udC13ZWlnaHQ6IGJvbGRcIixcbiAgICBdLmpvaW4oXCI7XCIpO1xuICAgIGNvbnNvbGUuaW5mbyhcImRldiBieTogJWMgQm9ybmZpZ2h0IFwiLCBjcmVkaXRzKTtcblxuICAgIC8qKlxuICAgICAqIENPTVBPTkVOVFMgSU5JVFxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogTmF2aWdhdGlvblxuICAgICAqIEB0eXBlIHtOYXZpZ2F0aW9uQ29udHJvbGxlcn1cbiAgICAgKi9cbiAgICBjb25zdCBuYXZpZ2F0aW9uID0gbmV3IE5hdmlnYXRpb25Db250cm9sbGVyKCk7XG4gICAgbmF2aWdhdGlvbi5pbml0KCk7XG5cbiAgICBjb25zdCBnbHRmTW9kZWxDb250cm9sbGVyID0gbmV3IEdMVEZNb2RlbENvbnRyb2xsZXIoKTtcbiAgICBnbHRmTW9kZWxDb250cm9sbGVyLmluaXQoKTtcbn0pO1xuIl19"}