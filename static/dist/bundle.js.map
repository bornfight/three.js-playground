{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/GLTFModelController.js","static/js/components/NavigationController.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import * as THREE from \"three\";\n\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\nexport default class GLTFModelController {\n    constructor() {\n        this.DOM = {\n            modelContainer: \".js-model-container\",\n            states: {},\n        };\n\n        this.modelContainer = document.querySelector(this.DOM.modelContainer);\n\n        this.scene;\n        this.camera;\n        this.renderer;\n        this.controls;\n        this.mixer;\n        this.clock = new THREE.Clock();\n    }\n\n    init() {\n        console.log(\"GLTFModelController init()\");\n\n        if (this.modelContainer !== null) {\n            this.initFBXModel();\n            this.animate();\n        } else {\n            console.error(\n                `${this.DOM.modelContainer} does not exist in the DOM!`,\n            );\n        }\n    }\n\n    initFBXModel() {\n        // camera\n        this.camera = new THREE.PerspectiveCamera(\n            35,\n            window.innerWidth / window.innerHeight,\n            0.5,\n            1000,\n        );\n        this.camera.position.set(48, 32, 32);\n\n        // scene\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0xa0a0a0);\n        this.scene.fog = new THREE.Fog(0xa0a0a0, 200, 400);\n\n        // lights\n        const hemiLight = new THREE.HemisphereLight(0xffffff, 0x999999);\n        hemiLight.position.set(0, 200, 0);\n        this.scene.add(hemiLight);\n\n        const dirLight = new THREE.DirectionalLight(0xcccccc);\n        dirLight.position.set(50, 200, 100);\n        dirLight.castShadow = true;\n        dirLight.shadow.camera.top = 180;\n        dirLight.shadow.camera.bottom = -100;\n        dirLight.shadow.camera.left = -120;\n        dirLight.shadow.camera.right = 120;\n        dirLight.shadow.mapSize.width = 2048;\n        dirLight.shadow.mapSize.height = 2048;\n        this.scene.add(dirLight);\n\n        // ground\n        const mesh = new THREE.Mesh(\n            new THREE.PlaneBufferGeometry(2000, 2000, 10, 10),\n            new THREE.MeshPhongMaterial({ color: 0x999999, depthWrite: false }),\n        );\n        mesh.rotation.x = -Math.PI / 2;\n        mesh.receiveShadow = true;\n        this.scene.add(mesh);\n\n        // ground grid\n        const grid = new THREE.GridHelper(2000, 40, 0x000000, 0x000000);\n        grid.material.opacity = 0.1;\n        grid.material.transparent = true;\n        this.scene.add(grid);\n\n        // get model\n        let model = this.modelContainer.getAttribute(\"data-model-source\");\n\n        // loader\n        const loader = new GLTFLoader();\n        loader.load(model, (model) => {\n            // dynamically change material\n            // let material = new THREE.MeshStandardMaterial({ color: 0x0000ff });\n\n            model.scene.traverse((object) => {\n                if (object.isMesh) {\n                    object.castShadow = true;\n                    object.receiveShadow = true;\n\n                    // additional modifications of position, color etc.\n                    object.position.y = 0.1;\n\n                    // child.material = material;\n                    // child.material.opacity = 0.5;\n                    // child.material.transparent = true;\n                }\n            });\n\n            this.scene.add(model.scene);\n        });\n\n        // renderer\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.shadowMap.enabled = true;\n        this.modelContainer.appendChild(this.renderer.domElement);\n\n        // orbit controls\n        this.controls = new OrbitControls(\n            this.camera,\n            this.renderer.domElement,\n        );\n        this.controls.target.set(0, 10, 0);\n        this.controls.autoRotate = true;\n        this.controls.autoRotateSpeed = 0.6;\n\n        // handle resize\n        window.addEventListener(\"resize\", () => this.onWindowResize(), false);\n    }\n\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    animate() {\n        requestAnimationFrame(() => this.animate());\n        this.renderer.render(this.scene, this.camera);\n        this.controls.update();\n    }\n}\n","/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n\n        this.DOM = {\n            navigation: \".js-navigation-wrapper\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n    /**\n     *\n     */\n    init() {\n        console.log(\"Navigation init()\");\n\n        if (this.navigation !== null) {\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(\n                this.DOM.states.navigationScrolled,\n            );\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","/**\n * Grid helper\n * Show grid overlay when developing\n * Not included in production bundle JS file\n */\nexport default class GridHelper {\n    constructor() {\n        /**\n         * Grid DOM selector\n         * @type {{grid: string}}\n         */\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        /**\n         * Grid options\n         * @type {{gutterFixed: boolean, initialDisplay: string, gridFixed: boolean, gutterWidth: number, gridColor: string, columnCount: number, gridWidth: number, columnBgColor: string}}\n         */\n        this.gridOptions = {\n            initialDisplay: \"none\", // \"flex\" or \"none\"\n            columnCount: 24,\n            gridWidth: 1440, // px\n            gridFixed: true,\n            gutterWidth: 0, // px\n            gutterFixed: false,\n            gridColor: \"rgb(255, 0, 255, 0.15)\",\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth -\n                (this.gridOptions.columnCount - 1) *\n                    this.gridOptions.gutterWidth) /\n            this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${\n            (this.columnWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n\n        this.gutterWidthPercentage = `${\n            (this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (this.gridOptions.gridFixed === true) {\n            this.grid.style.maxWidth = `${this.gridOptions.gridWidth}px`;\n        }\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","/**\n * MAIN JS FILE\n */\n\n/**\n * Helpers\n * Imports of helper functions are stripped out of bundle\n * Include them within \"start-strip-code\" and \"end-strip-code\" comments\n */\n/* start-strip-code */\nimport GridHelper from \"./helpers/GridHelper\";\n/* end-strip-code */\n/**\n * Components\n */\nimport NavigationController from \"./components/NavigationController\";\nimport GLTFModelController from \"./components/GLTFModelController\";\n\n/**\n * Check if document is ready cross-browser\n * @param callback\n */\nconst ready = (callback) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callback();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callback);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callback();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    /**\n     * HELPERS INIT\n     * Only init helpers if they exist\n     * Will be undefined on production because of import stripping\n     */\n    if (typeof GridHelper == \"function\") {\n        const grid = new GridHelper();\n        grid.init();\n    }\n\n    /**\n     * CREDITS INIT\n     */\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n    console.info(\"dev by: %c Bornfight \", credits);\n\n    /**\n     * COMPONENTS INIT\n     */\n\n    /**\n     * Navigation\n     * @type {NavigationController}\n     */\n    const navigation = new NavigationController();\n    navigation.init();\n\n    const gltfModelController = new GLTFModelController();\n    gltfModelController.init();\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}